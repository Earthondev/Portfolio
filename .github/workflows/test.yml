name: Test Portfolio

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  html-validation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install html-validate
      run: npm install -g html-validate
      
    - name: Validate HTML files
      run: |
        html-validate index.html about.html contact.html portfolio.html 404.html 500.html case-studies/hanaihang.html
        
    - name: Check HTML structure
      run: |
        echo "Checking HTML structure..."
        for file in *.html case-studies/*.html; do
          echo "Validating $file"
          if ! grep -q "<!DOCTYPE html>" "$file"; then
            echo "Missing DOCTYPE in $file"
            exit 1
          fi
          if ! grep -q "<html" "$file"; then
            echo "Missing html tag in $file"
            exit 1
          fi
          if ! grep -q "</html>" "$file"; then
            echo "Missing closing html tag in $file"
            exit 1
          fi
        done

  css-validation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install css-validator
      run: npm install -g css-validator
      
    - name: Validate CSS files
      run: |
        css-validator style.css
        css-validator contact.css
        css-validator case-studies/case-study.css
        
    - name: Check CSS syntax
      run: |
        echo "Checking CSS syntax..."
        for file in *.css case-studies/*.css; do
          echo "Validating $file"
          if ! grep -q ":root" "$file"; then
            echo "Missing :root in $file"
            exit 1
          fi
        done

  json-validation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate JSON files
      run: |
        echo "Validating JSON files..."
        python3 -m json.tool projects.json > /dev/null
        python3 -m json.tool services.json > /dev/null
        echo "JSON files are valid"
        
    - name: Check JSON structure
      run: |
        echo "Checking JSON structure..."
        python3 -c "
        import json
        with open('projects.json') as f:
            projects = json.load(f)
        assert isinstance(projects, list), 'Projects should be a list'
        for project in projects:
            assert 'id' in project, 'Project missing id'
            assert 'title' in project, 'Project missing title'
            assert 'year' in project, 'Project missing year'
        print('Projects JSON structure is valid')
        "
        
        python3 -c "
        import json
        with open('services.json') as f:
            services = json.load(f)
        assert 'services' in services, 'Services missing services key'
        assert 'skills' in services, 'Services missing skills key'
        assert 'certifications' in services, 'Services missing certifications key'
        print('Services JSON structure is valid')
        "

  performance-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install lighthouse-ci
      run: npm install -g lighthouse-ci
      
    - name: Start local server
      run: |
        python3 -m http.server 8000 &
        sleep 5
        
    - name: Run Lighthouse CI
      run: |
        lhci autorun --collect.url=http://localhost:8000 --collect.numberOfRuns=3
        
    - name: Check file sizes
      run: |
        echo "Checking file sizes..."
        find . -name "*.html" -exec wc -c {} \; | awk '$1 > 100000 {print "Large HTML file:", $2, "bytes"; exit 1}'
        find . -name "*.css" -exec wc -c {} \; | awk '$1 > 50000 {print "Large CSS file:", $2, "bytes"; exit 1}'
        find . -name "*.js" -exec wc -c {} \; | awk '$1 > 50000 {print "Large JS file:", $2, "bytes"; exit 1}'
        echo "All file sizes are acceptable"

  accessibility-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install pa11y
      run: npm install -g pa11y
      
    - name: Start local server
      run: |
        python3 -m http.server 8000 &
        sleep 5
        
    - name: Run accessibility tests
      run: |
        pa11y http://localhost:8000
        pa11y http://localhost:8000/about.html
        pa11y http://localhost:8000/portfolio.html
        pa11y http://localhost:8000/contact.html
        
    - name: Check accessibility features
      run: |
        echo "Checking accessibility features..."
        for file in *.html case-studies/*.html; do
          echo "Checking $file"
          if ! grep -q "aria-label" "$file"; then
            echo "Missing aria-label in $file"
            exit 1
          fi
          if ! grep -q "alt=" "$file"; then
            echo "Missing alt attributes in $file"
            exit 1
          fi
        done
        echo "Accessibility features are present"

  security-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check security headers
      run: |
        echo "Checking security configuration..."
        if [ -f ".htaccess" ]; then
          echo "Apache security headers configured"
        fi
        if [ -f "netlify.toml" ]; then
          echo "Netlify security headers configured"
        fi
        
    - name: Check for sensitive data
      run: |
        echo "Checking for sensitive data..."
        if grep -r "password\|secret\|key\|token" . --exclude-dir=.git --exclude="*.md"; then
          echo "Potential sensitive data found"
          exit 1
        fi
        echo "No sensitive data found"
