name: Deploy Portfolio

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install -g html-validate
        npm install -g css-validator
        npm install -g lighthouse-ci
        
    - name: Validate HTML
      run: |
        html-validate index.html about.html contact.html portfolio.html 404.html 500.html case-studies/hanaihang.html
        
    - name: Validate CSS
      run: |
        css-validator style.css contact.css case-studies/case-study.css
        
    - name: Validate JSON
      run: |
        python3 -m json.tool projects.json > /dev/null
        python3 -m json.tool services.json > /dev/null
        
    - name: Check file sizes
      run: |
        echo "Checking file sizes..."
        find . -name "*.html" -exec wc -c {} \; | awk '$1 > 100000 {print "Large HTML file:", $2, "bytes"; exit 1}'
        find . -name "*.css" -exec wc -c {} \; | awk '$1 > 50000 {print "Large CSS file:", $2, "bytes"; exit 1}'
        find . -name "*.js" -exec wc -c {} \; | awk '$1 > 50000 {print "Large JS file:", $2, "bytes"; exit 1}'
        
    # --- Lighthouse CI ---
    - name: Lighthouse CI
      run: |
        echo "Running Lighthouse CI"
        lhci autorun --collect.url=https://earthondev.github.io/Portfolio/ \
                      --upload.target=temporary-public-storage
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        cname: earthondev.github.io
        
    # Deploy to Netlify (requires NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID secrets)
    # To set up Netlify deployment:
    # 1. Go to Netlify dashboard > Site settings > Build & deploy > Build hooks
    # 2. Create a Personal Access Token in Netlify
    # 3. Add NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID as repository secrets
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: '.'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      continue-on-error: true